{
  config,
  pkgs,
  lib,
  ...
}: {
  imports = [
    ./_acme.nix
    ./_nginx.nix
  ];

  # Initially generated using compose2nix v0.1.9.
  # inspo: https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker
  # inspo: https://lmy.medium.com/from-ansible-to-nixos-3a117b140bec
  networking.firewall = {
    # need to add ports for each added child bridge
    allowedTCPPorts = [5353 50000 50001 50002];
    allowedUDPPorts = [5353];

    allowedTCPPortRanges = [
      {
        from = 50100;
        to = 50200;
      }
    ];
  };

  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };

  virtualisation.oci-containers = {
    backend = "podman";
    containers = {
      "homebridge" = {
        image = "ghcr.io/homebridge/homebridge";
        volumes = [
          "/var/lib/homebridge:/homebridge:rw"
        ];
        labels = {
          "io.containers.autoupdate" = "registry";
        };
        log-driver = "journald";
        extraOptions = [
          "--log-opt=max-file=1"
          "--log-opt=max-size=10mb"
          "--network=host"
          "--dns=1.1.1.1,1.0.0.1" # without this, host DNS points to tailscale which doesn't work in container
        ];
      };
    };
  };

  services.nginx = {
    virtualHosts = {
      "home.orther.dev" = {
        forceSSL = true;
        useACMEHost = "orther.dev";
        locations."/" = {
          recommendedProxySettings = true;
          proxyPass = "http://127.0.0.1:8581";
        };
      };
    };
  };

  sops.secrets."kopia-repository-token" = {};

  systemd = {
    tmpfiles.rules = ["d /var/lib/homebridge 0755 root root"];

    targets."podman-compose-homebridge-root" = {
      unitConfig = {
        Description = "Root target generated by compose2nix.";
      };
      wantedBy = ["multi-user.target"];
    };

    services = {
      "podman-homebridge" = {
        serviceConfig = {
          Restart = lib.mkOverride 500 "always";
        };
        partOf = [
          "podman-compose-homebridge-root.target"
        ];
        wantedBy = [
          "podman-compose-homebridge-root.target"
        ];
      };

      "backup-homebridge" = {
        description = "Backup Homebridge installation with Kopia";
        wantedBy = ["default.target"];
        serviceConfig = {
          User = "root";
          ExecStartPre = "${pkgs.kopia}/bin/kopia repository connect from-config --token-file ${config.sops.secrets."kopia-repository-token".path}";
          ExecStart = "${pkgs.kopia}/bin/kopia snapshot create /var/lib/homebridge";
          ExecStartPost = "${pkgs.kopia}/bin/kopia repository disconnect";
        };
      };
    };

    timers = {
      "podman-auto-update" = {
        wantedBy = ["timers.target"];
        timerConfig = {
          OnCalendar = "*-*-* 7:00:00";
          RandomizedDelaySec = "1h";
        };
      };

      "backup-homebridge" = {
        description = "Backup Homebridge installation with Kopia";
        wantedBy = ["timers.target"];
        timerConfig = {
          OnCalendar = "*-*-* 4:00:00";
          RandomizedDelaySec = "1h";
        };
      };
    };
  };

  environment.persistence."/nix/persist" = {
    directories = [
      "/var/lib/homebridge"
      "/var/lib/containers"
    ];
  };
}
